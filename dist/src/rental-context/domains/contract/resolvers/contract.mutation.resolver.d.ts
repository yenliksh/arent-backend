import { InnopayCardModel } from '@domains/innopay-card/models/innopay-card.model';
import { FindMyCardService } from '@domains/innopay-card/queries/find-my-card/find-my-card.service';
import { UserOrmEntity } from '@infrastructure/database/entities/user.orm-entity';
import { AcceptContractOfferRequest } from '../commands/accept-contract-offer/accept-contract-offer.request.dto';
import { AcceptContractOfferService } from '../commands/accept-contract-offer/accept-contract-offer.service';
import { CancelContractByTenantRequest } from '../commands/cancel-contract-by-tenant/cancel-contract-by-tenant.request.dto';
import { CancelContractByTenantService } from '../commands/cancel-contract-by-tenant/cancel-contract-by-tenant.service';
import { ChangeTenantPaymentMethodRequest } from '../commands/change-tenant-payment-method/change-tenant-payment-method.request.dto';
import { ChangeTenantPaymentMethodService } from '../commands/change-tenant-payment-method/change-tenant-payment-method.service';
import { ContractTemporaryConcludeRequest } from '../commands/contract-temporary-conclude/contract-temporary-conclude.request';
import { ContractTemporaryConcludeService } from '../commands/contract-temporary-conclude/contract-temporary-conclude.service';
import { ContractTemporaryInstantConcludeRequest } from '../commands/contract-temporary-instant-conclude/contract-temporary-instant-conclude.request';
import { ContractTemporaryInstantConcludeService } from '../commands/contract-temporary-instant-conclude/contract-temporary-instant-conclude.service';
import { RejectContractOfferRequest } from '../commands/reject-contract-offer/reject-contract-offer.request.dto';
import { RejectContractOfferService } from '../commands/reject-contract-offer/reject-contract-offer.service';
import { SendContractOfferEmailResponse } from '../commands/send-contract-offer-email/send-contract-offer-email-response.dto';
import { SendOfferEmail } from '../commands/send-contract-offer-email/send-contract-offer-email.dto';
import { SendContractOfferEmailService } from '../commands/send-contract-offer-email/send-contract-offer-email.service';
import { SendOfferStatusEmail } from '../commands/send-contract-offer-status-email/send-contract-offer-status-email';
import { SendContractOfferStatusEmailResponse } from '../commands/send-contract-offer-status-email/send-contract-offer-status-email.response';
import { SendContractOfferStatusEmailService } from '../commands/send-contract-offer-status-email/send-contract-offer-status-email.service';
import { SendContractOfferRequest } from '../commands/send-contract-offer/send-contract-offer.request.dto';
import { SendContractOfferService } from '../commands/send-contract-offer/send-contract-offer.service';
import { ContractResponse } from '../dtos/contract.response.dto';
import { FindContractService } from '../queries/find-contract/find-contract.service';
export declare class ContractMutationGraphqlResolver {
    private readonly sendOfferService;
    private readonly acceptOfferService;
    private readonly rejectOfferService;
    private readonly changeTenantPaymentMethodService;
    private readonly cancelContractByTenantService;
    private readonly contractTemporaryConcludeService;
    private readonly contractTemporaryInstantConcludeService;
    private readonly findByIdService;
    private readonly findMyCardByIdService;
    private readonly sendContractOfferStatusEmailService;
    private readonly sendContractOfferEmailService;
    constructor(sendOfferService: SendContractOfferService, acceptOfferService: AcceptContractOfferService, rejectOfferService: RejectContractOfferService, changeTenantPaymentMethodService: ChangeTenantPaymentMethodService, cancelContractByTenantService: CancelContractByTenantService, contractTemporaryConcludeService: ContractTemporaryConcludeService, contractTemporaryInstantConcludeService: ContractTemporaryInstantConcludeService, findByIdService: FindContractService, findMyCardByIdService: FindMyCardService, sendContractOfferStatusEmailService: SendContractOfferStatusEmailService, sendContractOfferEmailService: SendContractOfferEmailService);
    temporaryConclude(iam: UserOrmEntity, input: ContractTemporaryConcludeRequest): Promise<ContractResponse>;
    temporaryInstantBooking(iam: UserOrmEntity, input: ContractTemporaryInstantConcludeRequest): Promise<ContractResponse>;
    sendOffer(iam: UserOrmEntity, input: SendContractOfferRequest): Promise<ContractResponse>;
    acceptOffer(iam: UserOrmEntity, input: AcceptContractOfferRequest): Promise<ContractResponse>;
    rejectOffer(iam: UserOrmEntity, input: RejectContractOfferRequest): Promise<ContractResponse>;
    changeTenantPaymentMethod(iam: UserOrmEntity, input: ChangeTenantPaymentMethodRequest): Promise<InnopayCardModel>;
    cancelByTenant(iam: UserOrmEntity, input: CancelContractByTenantRequest): Promise<ContractResponse>;
    sendContractStatusEmail(input: SendOfferStatusEmail): Promise<SendContractOfferStatusEmailResponse>;
    sendRequestEmail(iam: UserOrmEntity, input: SendOfferEmail): Promise<SendContractOfferEmailResponse>;
}
