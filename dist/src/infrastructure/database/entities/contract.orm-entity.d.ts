import { IGuests } from '@domain-value-objects/apartment-guests.value-object';
import { ApartmentRulesProps } from '@domain-value-objects/apartment-rules.value-object';
import { IBaseApartmentAdData } from '@domains/contract/domain/value-objects/base-contract-apartment-ad-data.value-object';
import { ApartmentRentPeriodType, ContractStatus, LongTermRentCancellationPolicyType, PaymentMethod, ShortTermRentBookingType, ShortTermRentCancellationPolicyType, ShortTermRentPaymentType } from '@infrastructure/enums';
import { ObjectionEntityBase } from '@libs/ddd/infrastructure/database/objection.entity.base';
import { Model, RelationMappingsThunk } from 'objection';
import { CurrencyType } from 'src/rental-context/domains/apartment-ad/domain/types';
import { ApartmentAdOrmEntity } from './apartment-ad.orm-entity';
import { ContractCancelationOrmEntity } from './contract-cancelation.orm-entity';
import { ContractRequestOrmEntity } from './contract-request.orm-entity';
import { InnopayCardOrmEntity } from './innopay-card.orm-entity';
import { PaymentTransactionOrmEntity } from './payment-transaction.orm-entity';
import { RentPeriodVersionOrmEntity } from './rent-period-version.orm-entity';
import { UserOrmEntity } from './user.orm-entity';
export declare class ContractOrmEntity extends ObjectionEntityBase {
    static create(data: Omit<ContractOrmEntity, keyof Model>): ContractOrmEntity;
    static tableName: string;
    contractRequestId?: string;
    rentPeriodVersionId: string;
    tenantId?: string;
    landlordId?: string;
    apartmentAdId?: string;
    apartmentRentPeriodType: ApartmentRentPeriodType;
    cost: number;
    currency: CurrencyType;
    status: ContractStatus;
    arrivalDate?: Date;
    departureDate?: Date;
    rules?: ApartmentRulesProps;
    rentBookingType?: ShortTermRentBookingType;
    rentPaymentType?: ShortTermRentPaymentType;
    baseApartmentAdData: IBaseApartmentAdData;
    guests: IGuests;
    isPending: boolean;
    isFined: boolean;
    isTemporary: boolean;
    shortTermCancellationPolicy?: ShortTermRentCancellationPolicyType;
    longTermCancellationPolicy?: LongTermRentCancellationPolicyType;
    defaultPaymentMethod?: PaymentMethod | null;
    tenantInnopayCardId?: string | null;
    nextPaymentTransactionId?: string;
    customerReference?: string | null;
    paymentUrl?: string | null;
    paymentUrlStartAt?: Date | null;
    tenantInnopayCard?: InnopayCardOrmEntity;
    transactions?: PaymentTransactionOrmEntity[];
    rentPeriodVersion?: RentPeriodVersionOrmEntity;
    contractRequest?: ContractRequestOrmEntity;
    apartmentAd?: ApartmentAdOrmEntity;
    tenant?: UserOrmEntity;
    contractCancelation?: ContractCancelationOrmEntity;
    static relationMappings: RelationMappingsThunk;
}
